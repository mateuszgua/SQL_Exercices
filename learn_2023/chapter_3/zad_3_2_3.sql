WITH DAILY_SALES AS
	(SELECT SALES_TRANSACTION_DATE::date,
			COUNT(*) AS TOTAL_SALES
		FROM SALES
		GROUP BY 1),
		
	SALES_STATS_30 AS
	(SELECT SALES_TRANSACTION_DATE, TOTAL_SALES, AVG(TOTAL_SALES) 
	 OVER (ORDER BY SALES_TRANSACTION_DATE ROWS BETWEEN 30 PRECEDING AND CURRENT ROW) AS AVG_SALES_30,
	 ROW_NUMBER() OVER (ORDER BY SALES_TRANSACTION_DATE) AS ROW_NUMBER
		FROM DAILY_SALES
		ORDER BY 1)
SELECT SALES_TRANSACTION_DATE,
CASE WHEN ROW_NUMBER >=30 THEN AVG_SALES_30 ELSE NULL END AS DEALS_MOVING_AVG_CALC_30
FROM SALES_STATS_30
WHERE SALES_TRANSACTION_DATE >= '2018-01-01'
AND SALES_TRANSACTION_DATE < '2019-01-01'