WITH DAILY_SALES AS (
	SELECT SALES_TRANSACTION_DATE::DATE,
	COUNT(*) AS SUM_AMOUNT
	FROM SALES
	GROUP BY 1
),
MOVING_AVERANGE_30 AS (
	SELECT SALES_TRANSACTION_DATE, SUM_AMOUNT,
	AVG(SUM_AMOUNT)
	OVER (ORDER BY
	SALES_TRANSACTION_DATE
	ROWS BETWEEN 30 PRECEDING AND CURRENT ROW) AS SALES_MOVING_30,
	ROW_NUMBER() OVER (ORDER BY SALES_TRANSACTION_DATE) AS ROW_NUMBER
	FROM DAILY_SALES
	ORDER BY 1)
SELECT SALES_TRANSACTION_DATE,
	CASE WHEN ROW_NUMBER>=30
	THEN SALES_MOVING_30
	ELSE NULL END
	AS SALES_MOVING_30
	FROM
	MOVING_AVERANGE_30
	WHERE SALES_TRANSACTION_DATE>='2018-01-01' AND SALES_TRANSACTION_DATE<='2019-01-01';

	
	